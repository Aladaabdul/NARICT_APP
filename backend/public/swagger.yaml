openapi: 3.0.0
info:
  title: NARICT SAVINGS AND LOAN SCHEME
  description: NARICT SAVINGS AND LOAN SCHEME API documentation
  version: 0.1.9


servers:
  - url: http://localhost:8000/api
    description: Localhost base url
  - url: https://narict-app.vercel.app/api
    description: Deploy base url

paths:
  /auth/register/admin:
      post:
        summary: Register an admin account
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin'
        responses:
          '201':
            description: Admin account register successfully
          '400':
            description: Bad Request - Invalid input
          '500':
            description: Admin registration unsuccessful

  /auth/register:
      post:
        summary: Register an account for user by an admin
        security:
          - bearerAuth: []
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        responses:
          '201':
            description: User account register successfully. Login details sent to user Email
          '400':
            description: Bad Request - Invalid input
          '500':
            description: User registration unsuccessful
  
  /auth/login:
    post:
      summary: Login endpoint for both admin and user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Login Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  message:
                    type: string
                    example: "Login Successful"
        '400':
          description: Bad Request - Invalid email or password
        '401':
          description: Unauthorized - Invalid credentials
        '500':
          description: Internal Server Error

  /auth/changePassword:
    post:
      summary: Change password endpoint
      security:
          - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
              required:
                - oldPassword
                - newPassword
      responses:
        '200':
          description: Password changed Successfully
        '400':
          description: Bad Request - Invalid Request
        '401':
          description: Unauthorized - Invalid credentials
        '500':
          description: Internal Server Error

  /auth/forgotPassword:
    post:
      summary: Forgot password endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        '200':
          description: Password reset email sent successfully
        '400':
          description: Bad Request - Invalid Request
        '401':
          description: Unauthorized - Invalid credentials
        '500':
          description: Internal Server Error

  /auth/resetPassword:
    post:
      summary: Reset password endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                newPassword:
                  type: string
              required:
                - token
                - newPassword
      responses:
        '200':
          description: Password reset successfully
        '400':
          description: Bad Request - Invalid Request
        '401':
          description: Unauthorized - Invalid credentials
        '500':
          description: Internal Server Error

  /auth/user/search:
    get:
      summary: Get user by query search using ipssNumber, email, fullName or combining them
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: ipssNumber
          schema:
            type: string
          description: Search user by user ipssNumber
        - in: query
          name: email
          schema:
            type: string
          description: Search user by email
        - in: query
          name: fullName
          schema:
            type: string
          description: Search by the user fullName (case-insensitive)
      responses:
        '200':
          description: Successful
        '400':
          description: Bad Request - Invalid Request
        '401':
          description: Unauthorized - Invalid credentials
        '500':
          description: Internal Server Error


  /auth/get-users:
    get:
      summary: Returns 20 recently created users
      security:
        - bearerAuth: []
      produces:
        - application/json
      responses:
        '200':
          description: Successful
        '400':
          description: Bad Request - Invalid input
        '500':
          description: Internal Server Error


  /saving/deposit:
    post:
      summary: Make saving endpoint
      security:
          - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ipssNumber:
                  type: string
                  example: "332266"
                amount:
                  type: integer
                  example: 100
              required:
                - ipssNumber
                - amount
      responses:
        '200':
          description: Saving successfully
        '400':
          description: Bad Request - Invalid Request
        '401':
          description: Unauthorized - Invalid credentials
        '500':
          description: Internal Server Error

  /saving/withdraw:
    post:
      summary: Make withdrawal endpoint
      security:
          - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ipssNumber:
                  type: string
                  example: "332266"
                amount:
                  type: integer
                  example: 100
              required:
                - ipssNumber
                - amount
      responses:
        '200':
          description: Withdrawal successfully
        '400':
          description: Bad Request - Invalid Request
        '401':
          description: Unauthorized - Invalid credentials
        '500':
          description: Internal Server Error

  /saving/transactions:
    get:
      summary: Returns user last 20 transactions
      security:
        - bearerAuth: []
      produces:
        - application/json
      responses:
        '200':
          description: User transactions retrieved successfully
        '400':
          description: Bad Request - Invalid input
        '500':
          description: Internal Server Error

  /saving/user-saving:
    get:
      summary: Returns user saving
      security:
        - bearerAuth: []
      produces:
        - application/json
      responses:
        '200':
          description: User saving retrieved successfully
        '400':
          description: Bad Request - Invalid input
        '500':
          description: Internal Server Error

  /saving/userSaving:
    post:
      summary: Get user saving including transaction history by an Admin using user ipssNumber
      security:
          - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ipssNumber:
                  type: string
              required:
                - ipssNumber
      responses:
        '200':
          description: User saving retrieved successfully
        '400':
          description: Bad Request - Invalid Request
        '401':
          description: Unauthorized - Invalid credentials
        '500':
          description: Internal Server Error

    
  /saving/get-savings:
    get:
      summary: Returns 20 recently modified savings
      security:
        - bearerAuth: []
      produces:
        - application/json
      responses:
        '200':
          description: Successful
        '400':
          description: Bad Request - Invalid input
        '500':
          description: Internal Server Error

  
  /loan/loan-terms:
    post:
      summary: Endpoint to view loan terms before calling the create-loan endpoint
      security:
          - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ipssNumber:
                  type: string
                  example: "332266"
                amount:
                  type: integer
                  example: 20000
                term_month:
                  type: integer
                  example: 14
              required:
                - ipssNmuber
                - amount
                - term_month
      responses:
        '200':
          description: Loan term retrieved successfully
        '400':
          description: Bad Request - Invalid Request
        '401':
          description: Unauthorized - Invalid credentials
        '500':
          description: Internal Server Error

  /loan/create-loan:
    post:
      summary: Endpoint to create a new loan
      security:
          - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ipssNumber:
                  type: string
                  example: "332266"
                amount:
                  type: integer
                  example: 20000
                term_month:
                  type: integer
                  example: 14
              required:
                - ipssNumber
                - amount
                - term_month
      responses:
        '200':
          description: Loan created successfully
        '400':
          description: Bad Request - Invalid Request
        '401':
          description: Unauthorized - Invalid credentials
        '500':
          description: Internal Server Error

  /loan/get-active-loan:
    get:
      summary: Returns user active loan
      security:
        - bearerAuth: []
      produces:
        - application/json
      responses:
        '200':
          description: Active loan retrieved successfully
        '400':
          description: Bad Request - Invalid input
        '500':
          description: Internal Server Error

  /loan/get-loan:
    post:
      summary: Get user active loan by an Admin using user ipssNumber
      security:
          - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ipssNumber:
                  type: string
              required:
                - ipssNumber
      responses:
        '200':
          description: User active loan retrieved successfully
        '400':
          description: Bad Request - Invalid Request
        '401':
          description: Unauthorized - Invalid credentials
        '500':
          description: Internal Server Error

  /loan/all-loan:
    post:
      summary: Return all user loans (Both active and paid) by an Admin using user ipssNumber
      security:
          - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ipssNumber:
                  type: string
              required:
                - ipssNumber
      responses:
        '200':
          description: Loan retrieved successfully
        '400':
          description: Bad Request - Invalid Request
        '401':
          description: Unauthorized - Invalid credentials
        '500':
          description: Internal Server Error

  /loan/make-payment:
    post:
      summary: Endpoint to pay user monthly installment
      security:
          - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ipssNumber:
                  type: string
                  example: "332266"
                amount:
                  type: integer
                  example: 3500
              required:
                - ipssNmuber
                - amount
      responses:
        '200':
          description: Payment successful
        '400':
          description: Bad Request - Invalid Request
        '401':
          description: Unauthorized - Invalid credentials
        '500':
          description: Internal Server Error


components:
  schemas:
    Admin:
      type: object
      properties:
        fullName:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - fullName
        - email
        - password

    User:
      type: object
      properties:
        fullName:
          type: string
        email:
          type: string
        ipssNumber:
          type: string
      required:
        - fullName
        - email
        - ipssNumber


  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT # optional, arbitrary value for documentation purposes